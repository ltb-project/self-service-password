parameters:
    # default language
    locale: en

    # Encryption, decryption keyphrase, always required
    # Please change it to anything long, random and complicated, you do not have to remember it
    # Changing it will also invalidate all previous tokens and SMS codes
    secret: 'change_me_with_something_complicated_and_do_not_share_me'

    ## LDAP configuration
    ldap_url: 'ldap://localhost'
    ldap_use_tls: false
    ldap_binddn: 'cn=manager,dc=example,dc=com'
    ldap_bindpw: 'secret'
    ldap_base: 'dc=example,dc=com'
    ldap_filter: '(&(objectClass=person)(uid={login}))'

    # LDAP attributes
    ldap_attribute_login: 'uid'
    ldap_attribute_fullname:  'cn'
    # LDAP mail attribute
    ldap_attribute_mail: 'mail'
    # What attribute should be changed by change ssh key feature ?
    ldap_attribute_sshkey: 'sshPublicKey'
    # GSM number attribute
    ldap_attribute_sms: 'mobile'

    ## Active Directory mode
    # true: use unicodePwd as password field
    # false: LDAPv3 standard behavior
    enable_ad_mode: false
    ad_options:
        # Force account unlock when password is changed
        enable_force_unlock: false
        # Force user change password at next login
        enable_force_password_change: false
        # Allow user with expired password to change password
        enable_change_expired_password: false

    ## Samba mode
    # true: update sambaNTpassword and sambaPwdLastSet attributes too
    # false: just update the password
    enable_samba_mode: false
    samba_options:
        # Set password min/max age in Samba attributes
        min_age: 5
        max_age: 45

    ## Shadow updates
    # Shadow options - require shadowAccount objectClass
    shadow_options:
        # Update shadowLastChange
        update_shadowLastChange: false
        update_shadowExpire: false
        # Default to -1, never expire
        shadow_expire_days: -1

    ## Hashing
    # Hash mechanism for password:
    # SSHA, SSHA256, SSHA384, SSHA512
    # SHA, SHA256, SHA384, SHA512
    # MD5, SMD5, CRYPT
    # clear (the default, let the server decide how it will store it)
    # auto (will check the hash of current password)
    # This option is not used with enable_ad_mode: true
    hash: 'clear'
    # Prefix to use for salt with CRYPT
    hash_options:
        crypt_salt_prefix: "$6$"
        crypt_salt_length: "6"

    ## Local password policy
    # This is applied before directory password policy
    pwd_policy_config:
        # Minimal length
        pwd_min_length: 0
        # Maximal length
        pwd_max_length: 0
        # Minimal lower characters
        pwd_min_lower: 0
        # Minimal upper characters
        pwd_min_upper: 0
        # Minimal digit characters
        pwd_min_digit: 0
        # Minimal special characters
        pwd_min_special: 0
        # Definition of special characters
        pwd_special_chars: '^a-zA-Z0-9'
        # Forbidden characters
        pwd_forbidden_chars: '%@'
        # Don't reuse the same password as currently
        pwd_no_reuse: true
        # Check that password is different than login
        pwd_diff_login: true
        # Complexity: number of different class of character required
        pwd_complexity: 0

    # Other policies
    # Invalid characters in login
    # Set at least "*()&|" to prevent LDAP injection
    # If empty, only alphanumeric characters are accepted
    # TODO not recommended
    login_forbidden_chars: '*()&|'

    ## Enable/disable main features
    # Use standard change form, default: true
    enable_password_change: true
    # Allow changing of sshPublicKey, default: false
    enable_sshkey_change: true
    # Use questions/answers, default: true
    enable_questions: true
    # Enable reset by email, default: true
    enable_reset_by_email: true
    # Use sms
    enable_reset_by_sms: true

    ## Password change extra settings
    # Who changes the password?
    # Also applicable for question/answer save
    # user: the user itself
    # manager: the above binddn
    who_change_password: 'user'

    ## Ssh Key change extra settings
    # Who changes the sshPublicKey attribute?
    # user: the user itself
    # manager: the above binddn
    who_change_ssh_key: user

    ## Questions extra settings
    # Answer attribute should be hidden to users!
    answer_objectClass: "extensibleObject"
    answer_attribute: "info"
    # TODO doc
    questions:
        birthday: "When is your birthday?"
        color: "What is your favorite color?"

    ## Reset password by Email extra settings
    # Get mail address directly from LDAP (only first mail entry)
    # and hide mail input field
    # default = false
    mail_address_use_ldap: false
    # Token lifetime in seconds
    token_lifetime: 3600

    ## Reset password by SMS extra settings
    # SMS method (mail, api)
    sms_method: 'mail'
    #TODO deprecated, propose new way
    sms_api_lib: 'lib/smsapi.inc.php'
    # Partially hide number
    sms_partially_hide_number: true
    # Send SMS mail to address
    smsmailto: '{sms_attribute}@service.provider.com'
    # Subject when sending email to SMTP to SMS provider
    smsmail_subject: "Provider code"
    # Message
    sms_message: '{smsresetmessage} {smstoken}'
    # Remove non digit characters from GSM number
    sms_sanitize_number: false
    # Truncate GSM number
    sms_truncate_number: false
    sms_truncate_number_length: 10
    # SMS token length
    sms_token_length: 6
    # Max attempts allowed for SMS token
    max_attempts: 3

    ## Notifications
    ## Requires mail configuration below
    # Notify users anytime their password is changed
    notify_user_on_password_change: false
    # Notify users anytime their ssh public key is changed
    notify_user_on_sshkey_change: false

    ## Mailing
    # Who the email should come from
    mail_from: "admin@example.com"
    mail_from_name: "Self Service Password"
    # email signature deprecated
    mail_signature: ""
    # Change config.yml for more configuration parameters.
    mailer_transport:  smtp
    mailer_host:       127.0.0.1
    mailer_user:       ~
    mailer_password:   ~

    ## Default theme settings
    # Show policy constraints message:
    # always, onerror, never (default)
    pwd_show_policy: 'never'
    # Position of password policy constraints message:
    # above - the form (default)
    # below - the form
    pwd_show_policy_pos: 'above'
    # Display menu on top
    show_menu: true
    # Display help messages
    show_help: true
    # Feature displayed on homepage
    default_route: 'change-password'
    # Logo
    logo: "ltb-logo.png"
    # Background image
    background_image: "/images/unsplash-space.jpeg"
    enable_password_changed_extra_message: false
    enable_password_change_help_extra_message: false
    enable_password_change_help_reset: true

    ## CAPTCHA
    # Use Google reCAPTCHA (http://www.google.com/recaptcha)
    enable_recaptcha: false
    # Go on the site to get public and private key
    recaptcha_publickey: "6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI"
    recaptcha_privatekey: "6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe"
    # Customization (see https://developers.google.com/recaptcha/docs/display)
    recaptcha_theme: "light"
    recaptcha_type: "image"
    recaptcha_size: "normal"
    # reCAPTCHA request method, null for default, Fully Qualified Class Name to override
    # Useful when allow_url_fopen=0 ex. $recaptcha_request_method = '\ReCaptcha\RequestMethod\CurlPost';
    recaptcha_request_method: '\ReCaptcha\RequestMethod\Post'

    ## Posthook
    enable_posthook: false
    # Launch a posthook script after successful password change
    posthook: '/usr/share/self-service-password/posthook.sh'